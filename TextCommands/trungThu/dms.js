const { ButtonBuilder , ActionRowBuilder } = require('discord.js')
const Discord = require("discord.js");

module.exports = {
  name: "dms",
  description: "G·ª≠i 1 tin nh·∫Øn cho ng∆∞·ªùi y√™u",
  aliases: ["nhantin", "dms"],

  run: async (client, message, args) => {
    if (!message.mentions.users.size) {
      return message.reply("B·∫°n c·∫ßn ph·∫£i tag m·ªôt ng∆∞·ªùi d√πng ƒë·ªÉ g·ª≠i tin nh·∫Øn!");
    }
    const taggedUser = message.mentions.users.first();
    args.shift()
    if (args.length <= 0) {
     return message.reply("B·∫°n c·∫ßn ph·∫£i nh·∫≠p tin nh·∫Øn !!!!");
    }
    const messageContent = args.join(" ");

    const accept = new ButtonBuilder()
     .setCustomId("accept")
     .setLabel("M√†y c√≥ ch·∫•p nh·∫≠n ko ?")
     .setStyle("Primary")

     const row = new ActionRowBuilder().addComponents(accept);
    

    await client.users.fetch(taggedUser.id, false).then((user) => {
          Promise.all([
               user.send({
                    content: messageContent,
                    components: [row]
               }),
               message.channel.send(`Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn: ${taggedUser.username}`)
          ])

client.on('interactionCreate', async (interaction) => {
     if (!interaction.isButton()) return;
     if (interaction.customId === 'accept') {
          // G·ª≠i h√¨nh ·∫£nh GIF ngay l·∫≠p t·ª©c
          await interaction.reply({ content: 'https://media.giphy.com/media/26BRv0ThflsHCqDrG/giphy.gif' });
             
          // T·∫°o m·ªôt kho·∫£ng th·ªùi gian ch·ªù 3 gi√¢y
          setTimeout(async () => {
          const embed = new Discord.EmbedBuilder()
          .setColor('#0099ff')
          .setTitle('L√Å TH∆Ø T√åNH Y√äU?')
          .setImage('https://cdn.discordapp.com/attachments/1080521432032882700/1158393274986418267/Untitled15_20220207110557-2.png?ex=651c154e&is=651ac3ce&hm=ba544b178ff5b7fba187c10b3f41b43425ca9e8866da3e2ab0bee16ceb80ac36&')
          .setDescription(`
          **__ <:love:1124414850328690808> B·∫†N C√ì 1 L√Å TH∆Ø C·ª¶A NG∆Ø·ªúI QUAN TR·ªåNG <:love:1124414850328690808>__**
          -
          ‚ô°„ÄÄ.„ÄÄ‚¨ö   B·ª©c th∆∞ c·ªßa gi√≥ l√† m·ªôt l√° th∆∞ t·ª´ ng∆∞·ªùi xa l·∫° tuy quen
          ‚ô°„ÄÄ.„ÄÄüéÄ  B·ª©c th∆∞ l√† l·ªùi ch√∫c 20/10 mu·ªën g·ª≠i ƒë·∫ø b·∫°n 
          ‚ô°„ÄÄ.„ÄÄ‚¨ö   role`);
          
             
          // G·ª≠i embed sau khi ƒë√£ ch·ªù 3 gi√¢y
     await interaction.editReply({ content: '', embeds: [embed] });
     }, 3000);
     }
     });                             
     }).catch((error) => {
          console.error(`Kh√¥ng th·ªÉ g·ª≠i DM ƒë·∫øn ${taggedUser.username}.\n`, error);
          message.channel.send(`Xin l·ªói, kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn ƒë·∫øn ${taggedUser.username} v√¨: ${error}`);
     });
     
     
     // helpchannel.send({
     //      content: "welcome to site",
     //      components: [
     //        new messageactionrow().addcomponents([button])
     //      ]
     //    })

    // taggedUser.send(args.join(" "))
    //     .then(() => {
    //         if (message.content.startsWith('dms')) {
    //             message.channel.send(`Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn: ${taggedUser.username}`);
    //         }// m nghe t n√≥i ƒëk
    //     })
    //     .catch(error => {
    //         console.error(`Kh√¥ng th·ªÉ g·ª≠i DM ƒë·∫øn ${taggedUser.username}.\n`, error);
    //         message.channel.send(`Xin l·ªói, kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn ƒë·∫øn ${taggedUser.username} v√¨: ${error}`);
    //     });
  },
};
